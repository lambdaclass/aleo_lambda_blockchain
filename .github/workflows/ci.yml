name: mOStropy build checks
on: push
jobs:
  integration-tests:
    runs-on: [self-hosted, nomad]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            profile: minimal
# Rust cache temporarily disabled until issue (https://github.com/actions/cache/issues/810) is fixed
#     - uses: Swatinem/rust-cache@v2
#       with:
#         key:  "mostropy"
      - uses: actions/setup-go@v3
        with:
          go-version: '1.16.1'
      - run: cargo build --release --features vmtropy_backend
      - run: make reset
      - run: |
          make node VM_FEATURE=vmtropy_backend > /dev/null &
          make abci VM_FEATURE=vmtropy_backend > /dev/null &
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:26657)" != "200" ]]; do sleep 2; done
          make test VM_FEATURE=vmtropy_backend
      - run: make reset 
      - run: rm -rf ~/.aleo/cache
      - run: cargo build --release --features snarkvm_backend
      - run: |
          make node VM_FEATURE=snarkvm_backend > /dev/null &
          make abci VM_FEATURE=snarkvm_backend > /dev/null &
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:26657)" != "200" ]]; do sleep 2; done
          make test VM_FEATURE=snarkvm_backend
  clippy:
    runs-on: [self-hosted, nomad]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: clippy
 # Rust cache temporarily disabled until issue (https://github.com/actions/cache/issues/810) is fixed
 #     - uses: Swatinem/rust-cache@v2
 #       with:
 #         key:  "mostropy"
      - run: apt install -y clang libclang1
      - run: cargo +nightly clippy --all-targets --features snarkvm_backend -- -D warnings 
      - run: cargo +nightly clippy --all-targets --features vmtropy_backend -- -D warnings 
  format:
    runs-on: [self-hosted, nomad]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: rustfmt
      - run: cargo fmt -- --check
